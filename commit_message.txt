refactor(checkers): Standardize error handling for custom checkers

This commit refactors the error handling mechanism for custom checkers to make it more robust and consistent with the rest of the application.

- **Standardized JSON Error Reporting:**
  - Custom checkers now return a JSON object with a standardized error format, including `status`, `error_message`, and `error_type`.
  - This allows the main script to parse and handle errors from custom checkers in a more structured way.

- **Centralized Error Handling:**
  - The `updates::handle_custom_check` function has been updated to parse the JSON error object from custom checkers and pass the details to the centralized `errors::handle_error` function.
  - This ensures that all errors, whether from the core script or custom checkers, are logged and reported consistently.

- **Updated Custom Checkers:**
  - The custom checkers for Cursor, VeraCrypt, Warp, and Zed have been updated to return the new standardized JSON error object on failure.