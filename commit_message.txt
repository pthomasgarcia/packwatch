refactor(shell): Improve modularity and script structure

This commit introduces a significant refactoring to improve the modularity and overall structure of the application.

- **Dependency Documentation:**
  - Added `Dependencies` sections to the headers of all script files to clearly document the relationships between modules.

- **Refactored CLI Logic:**
  - The `cli::validate_and_filter_apps` function has been refactored to return a list of valid applications instead of modifying an array by reference. This improves the clarity and predictability of the function.

- **Lazy Loading of Modules:**
  - The main script (`src/core/main.sh`) has been updated to lazy-load non-essential modules. Core modules required for basic operations like `--help` are loaded first, and the rest are loaded only when the main application workflow is executed.

- **New `util` Directory:**
  - A new `src/util` directory has been created to house utility scripts that are shared across different parts of the application.
  - The `checker_utils.sh` script has been moved from `src/lib` to `src/util`.

- **Code Cleanup:**
  - The unused `main-backup.sh` file has been deleted.
  - Code formatting has been made more consistent across all files.
